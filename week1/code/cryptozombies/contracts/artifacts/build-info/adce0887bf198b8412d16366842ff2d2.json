{
	"id": "adce0887bf198b8412d16366842ff2d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.19",
	"solcLongVersion": "0.4.19+commit.c4cbbb05",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/zombiefactory.sol": {
				"content": "pragma solidity ^0.4.19;\r\n\r\nimport \"./ownable.sol\";\r\nimport \"./safemath.sol\";\r\n\r\ncontract ZombieFactory is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeMath32 for uint32;\r\n    using SafeMath16 for uint16;\r\n     \r\n\r\n    event NewZombie(uint zombieId, string name, uint dna);\r\n\r\n    uint dnaDigits = 16;\r\n    uint dnaModulus = 10 ** dnaDigits;\r\n    uint cooldownTime = 1 days;\r\n\r\n    struct Zombie {\r\n        string name;\r\n        uint dna;\r\n        uint32 level;\r\n        uint32 readyTime;\r\n        uint16 winCount;\r\n        uint16 lossCount;\r\n    }\r\n\r\n    Zombie[] public zombies;\r\n\r\n    mapping(uint => address) public zombieToOwner;\r\n    mapping(address => uint) ownerZombieCount;\r\n\r\n    function _createZombie(string _name, uint _dna) internal {\r\n        uint id = zombies.push(Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0)) - 1;\r\n        zombieToOwner[id] = msg.sender;\r\n        ownerZombieCount[msg.sender] = ownerZombieCount[msg.sender].add(1);\r\n        NewZombie(id, _name, _dna);\r\n    }\r\n\r\n    function _generateRandomDna(string _str) private view returns (uint) {\r\n        uint rand = uint(keccak256(_str));\r\n        return rand % dnaModulus;\r\n    }\r\n\r\n    function createRandomZombie(string _name) public {\r\n        require(ownerZombieCount[msg.sender] == 0);\r\n        uint randDna = _generateRandomDna(_name);\r\n        randDna = randDna - randDna % 100;\r\n        _createZombie(_name, randDna);\r\n    }\r\n}\r\n"
			},
			"contracts/safemath.sol": {
				"content": "pragma solidity ^0.4.19;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title SafeMath32\r\n * @dev SafeMath library implemented for uint32\r\n */\r\nlibrary SafeMath32 {\r\n\r\n  function mul(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint32 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint32 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    uint32 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title SafeMath16\r\n * @dev SafeMath library implemented for uint16\r\n */\r\nlibrary SafeMath16 {\r\n\r\n  function mul(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint16 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint16 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    uint16 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n"
			},
			"contracts/ownable.sol": {
				"content": "pragma solidity ^0.4.19;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Ownable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/ownable.sol\":223:1043  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/ownable.sol\":482:539  function Ownable() public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/ownable.sol\":523:533  msg.sender */\n  caller\n    /* \"contracts/ownable.sol\":515:520  owner */\n  0x0\n  dup1\n    /* \"contracts/ownable.sol\":515:533  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownable.sol\":223:1043  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ownable.sol\":223:1043  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ownable.sol\":245:265  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/ownable.sol\":245:265  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n        /* \"contracts/ownable.sol\":676:681  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":662:681  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":662:672  msg.sender */\n      caller\n        /* \"contracts/ownable.sol\":662:681  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable.sol\":654:682  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/ownable.sol\":962:963  0 */\n      0x0\n        /* \"contracts/ownable.sol\":942:964  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":942:950  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":942:964  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownable.sol\":934:965  require(newOwner != address(0)) */\n      iszero\n      iszero\n      tag_13\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_13:\n        /* \"contracts/ownable.sol\":1000:1008  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":972:1009  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":993:998  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":972:1009  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":1024:1032  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1016:1021  owner */\n      0x0\n      dup1\n        /* \"contracts/ownable.sol\":1016:1032  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ad445fa3c3328e8e59ceba489d776773233b688740edf02d784fecad19c00d700029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102858061005e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a6575b600080fd5b341561005c57600080fd5b6100646100df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b157600080fd5b6100dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610104565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561019b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820ad445fa3c3328e8e59ceba489d776773233b688740edf02d784fecad19c00d700029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x285 DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad DIFFICULTY 0x5f LOG3 0xc3 ORIGIN DUP15 DUP15 MSIZE 0xce 0xba 0x48 SWAP14 PUSH24 0x6773233B688740EDF02D784FECAD19C00D70002900000000 ",
							"sourceMap": "223:820:0:-;;;482:57;;;;;;;;523:10;515:5;;:18;;;;;;;;;;;;;;;;;;223:820;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a6575b600080fd5b341561005c57600080fd5b6100646100df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b157600080fd5b6100dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610104565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561019b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820ad445fa3c3328e8e59ceba489d776773233b688740edf02d784fecad19c00d700029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad DIFFICULTY 0x5f LOG3 0xc3 ORIGIN DUP15 DUP15 MSIZE 0xce 0xba 0x48 SWAP14 PUSH24 0x6773233B688740EDF02D784FECAD19C00D70002900000000 ",
							"sourceMap": "223:820:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:20;;;;;;;;;;;;;:::o;865:173::-;676:5;;;;;;;;;;;662:19;;:10;:19;;;654:28;;;;;;;;962:1;942:22;;:8;:22;;;;934:31;;;;;;;;1000:8;972:37;;993:5;;;;;;;;;;;972:37;;;;;;;;;;;;1024:8;1016:5;;:16;;;;;;;;;;;;;;;;;;865:173;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "129000",
								"executionCost": "20438",
								"totalCost": "149438"
							},
							"external": {
								"owner()": "434",
								"transferOwnership(address)": "22560"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "MSTORE"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "CALLVALUE"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "ISZERO"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "JUMPI"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "DUP1"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "REVERT"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 482,
									"end": 539,
									"name": "JUMPDEST"
								},
								{
									"begin": 523,
									"end": 533,
									"name": "CALLER"
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 515,
									"end": 520,
									"name": "DUP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "EXP"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP2"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SLOAD"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP2"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "MUL"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "NOT"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "AND"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SWAP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP4"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "AND"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "MUL"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "OR"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SWAP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SSTORE"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "POP"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "DUP1"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "CODECOPY"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1043,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ad445fa3c3328e8e59ceba489d776773233b688740edf02d784fecad19c00d700029",
									".code": [
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "LT"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "DIV"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "AND"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "EQ"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "EQ"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 1043,
											"name": "REVERT"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "CALLVALUE"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "ISZERO"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPI"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "REVERT"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP3"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MSTORE"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "ADD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SUB"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "RETURN"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "CALLVALUE"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPI"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "REVERT"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "STOP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "EXP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DIV"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SLOAD"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "EXP"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DIV"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 672,
											"name": "CALLER"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "EQ"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "ISZERO"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "ISZERO"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "JUMPI"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "REVERT"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "EQ"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "REVERT"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SLOAD"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "EXP"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DIV"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SWAP2"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SUB"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "LOG3"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "EXP"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SLOAD"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "MUL"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "NOT"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP4"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "MUL"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "OR"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SSTORE"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.19+commit.c4cbbb05\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ownable.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x9669dac17bf07f37966ad82d89b147ed7006cb9937bc1eca4957b73b0f72a136\",\"urls\":[\"bzzr://0d5b3eb0370a978d7852e84b9c31c234c44710fb03ea2f6eafbda9af3160f395\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/safemath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":122:1184  library SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":122:1184  library SafeMath {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820d106b2a3f285cf745f1e98b84a310114e7585f3eca00e598e7f6a3459ca5c79a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820d106b2a3f285cf745f1e98b84a310114e7585f3eca00e598e7f6a3459ca5c79a0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd1 MOD 0xb2 LOG3 CALLCODE DUP6 0xcf PUSH21 0x5F1E98B84A310114E7585F3ECA00E598E7F6A3459C 0xa5 0xc7 SWAP11 STOP 0x29 ",
							"sourceMap": "122:1062:1:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a72305820d106b2a3f285cf745f1e98b84a310114e7585f3eca00e598e7f6a3459ca5c79a0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd1 MOD 0xb2 LOG3 CALLCODE DUP6 0xcf PUSH21 0x5F1E98B84A310114E7585F3ECA00E598E7F6A3459C 0xa5 0xc7 SWAP11 STOP 0x29 ",
							"sourceMap": "122:1062:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "MSTORE"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "CALLVALUE"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "ISZERO"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "JUMPI"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "DUP1"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "REVERT"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "JUMPDEST"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "DUP1"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "CODECOPY"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 1184,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d106b2a3f285cf745f1e98b84a310114e7585f3eca00e598e7f6a3459ca5c79a0029",
									".code": [
										{
											"begin": 122,
											"end": 1184,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 122,
											"end": 1184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 122,
											"end": 1184,
											"name": "MSTORE"
										},
										{
											"begin": 122,
											"end": 1184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 122,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 1184,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.19+commit.c4cbbb05\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x6fbc3d8ff7edeb4b06395f245c72ebe51789c93a8313d5335dcbc0bdce4c19e4\",\"urls\":[\"bzzr://1256e1270c7cd10f1fc36664c905f3aee5758ea9a908d6dafab91d350ffc52b0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath16": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath16\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":2082:2810  library SafeMath16 {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":2082:2810  library SafeMath16 {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820e57cc4e1f3c51650468402912045bda8fe2ae03c695e8f18c91d76725d3a1ded0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820e57cc4e1f3c51650468402912045bda8fe2ae03c695e8f18c91d76725d3a1ded0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe5 PUSH29 0xC4E1F3C51650468402912045BDA8FE2AE03C695E8F18C91D76725D3A1D 0xed STOP 0x29 ",
							"sourceMap": "2082:728:1:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a72305820e57cc4e1f3c51650468402912045bda8fe2ae03c695e8f18c91d76725d3a1ded0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe5 PUSH29 0xC4E1F3C51650468402912045BDA8FE2AE03C695E8F18C91D76725D3A1D 0xed STOP 0x29 ",
							"sourceMap": "2082:728:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint16,uint16)": "infinite",
								"div(uint16,uint16)": "infinite",
								"mul(uint16,uint16)": "infinite",
								"sub(uint16,uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "MSTORE"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "CALLVALUE"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "ISZERO"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "JUMPI"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "DUP1"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "REVERT"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "JUMPDEST"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "DUP1"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "CODECOPY"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2810,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e57cc4e1f3c51650468402912045bda8fe2ae03c695e8f18c91d76725d3a1ded0029",
									".code": [
										{
											"begin": 2082,
											"end": 2810,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2082,
											"end": 2810,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2810,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2810,
											"name": "DUP1"
										},
										{
											"begin": 2082,
											"end": 2810,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.19+commit.c4cbbb05\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath16\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath16\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x6fbc3d8ff7edeb4b06395f245c72ebe51789c93a8313d5335dcbc0bdce4c19e4\",\"urls\":[\"bzzr://1256e1270c7cd10f1fc36664c905f3aee5758ea9a908d6dafab91d350ffc52b0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath32": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath32\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":1269:1997  library SafeMath32 {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":1269:1997  library SafeMath32 {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820c752e7193c7b3b35dbcb00e24689463e56bc90cf60e7d2eb0b985ed067894a4c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820c752e7193c7b3b35dbcb00e24689463e56bc90cf60e7d2eb0b985ed067894a4c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc7 MSTORE 0xe7 NOT EXTCODECOPY PUSH28 0x3B35DBCB00E24689463E56BC90CF60E7D2EB0B985ED067894A4C0029 ",
							"sourceMap": "1269:728:1:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a72305820c752e7193c7b3b35dbcb00e24689463e56bc90cf60e7d2eb0b985ed067894a4c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc7 MSTORE 0xe7 NOT EXTCODECOPY PUSH28 0x3B35DBCB00E24689463E56BC90CF60E7D2EB0B985ED067894A4C0029 ",
							"sourceMap": "1269:728:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint32,uint32)": "infinite",
								"div(uint32,uint32)": "infinite",
								"mul(uint32,uint32)": "infinite",
								"sub(uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "MSTORE"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "CALLVALUE"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "ISZERO"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "JUMPI"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "DUP1"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "REVERT"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "JUMPDEST"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "DUP1"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "CODECOPY"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1997,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c752e7193c7b3b35dbcb00e24689463e56bc90cf60e7d2eb0b985ed067894a4c0029",
									".code": [
										{
											"begin": 1269,
											"end": 1997,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1269,
											"end": 1997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1997,
											"name": "MSTORE"
										},
										{
											"begin": 1269,
											"end": 1997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1997,
											"name": "DUP1"
										},
										{
											"begin": 1269,
											"end": 1997,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.19+commit.c4cbbb05\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath32\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath32\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x6fbc3d8ff7edeb4b06395f245c72ebe51789c93a8313d5335dcbc0bdce4c19e4\",\"urls\":[\"bzzr://1256e1270c7cd10f1fc36664c905f3aee5758ea9a908d6dafab91d350ffc52b0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/zombiefactory.sol": {
				"ZombieFactory": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombies",
							"outputs": [
								{
									"name": "name",
									"type": "string"
								},
								{
									"name": "dna",
									"type": "uint256"
								},
								{
									"name": "level",
									"type": "uint32"
								},
								{
									"name": "readyTime",
									"type": "uint32"
								},
								{
									"name": "winCount",
									"type": "uint16"
								},
								{
									"name": "lossCount",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombieToOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_name",
									"type": "string"
								}
							],
							"name": "createRandomZombie",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "zombieId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "dna",
									"type": "uint256"
								}
							],
							"name": "NewZombie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/zombiefactory.sol\":81:1436  contract ZombieFactory is Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/zombiefactory.sol\":313:315  16 */\n  0x10\n    /* \"contracts/zombiefactory.sol\":296:315  uint dnaDigits = 16 */\n  0x1\n  sstore\n    /* \"contracts/zombiefactory.sol\":346:355  dnaDigits */\n  sload(0x1)\n    /* \"contracts/zombiefactory.sol\":340:342  10 */\n  0xa\n    /* \"contracts/zombiefactory.sol\":340:355  10 ** dnaDigits */\n  exp\n    /* \"contracts/zombiefactory.sol\":322:355  uint dnaModulus = 10 ** dnaDigits */\n  0x2\n  sstore\n    /* \"contracts/zombiefactory.sol\":382:388  1 days */\n  0x15180\n    /* \"contracts/zombiefactory.sol\":362:388  uint cooldownTime = 1 days */\n  0x3\n  sstore\n    /* \"contracts/ownable.sol\":523:533  msg.sender */\n  caller\n    /* \"contracts/ownable.sol\":515:520  owner */\n  0x0\n  dup1\n    /* \"contracts/ownable.sol\":515:533  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/zombiefactory.sol\":81:1436  contract ZombieFactory is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/zombiefactory.sol\":81:1436  contract ZombieFactory is Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x2052465e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x528b7b8f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7bff0a01\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/zombiefactory.sol\":571:594  Zombie[] public zombies */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup9\n      dup2\n      dup2\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_10\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_11\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_10)\n    tag_11:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_12:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_12\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_10:\n      pop\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefactory.sol\":603:648  mapping(uint => address) public zombieToOwner */\n    tag_3:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefactory.sol\":1188:1433  function createRandomZombie(string _name) public {\r... */\n    tag_4:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"contracts/ownable.sol\":245:265  address public owner */\n    tag_5:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_22, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_22:\n      tag_23\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"contracts/zombiefactory.sol\":571:594  Zombie[] public zombies */\n    tag_9:\n      0x4\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x3\n      mul\n      add\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      swap1\n      dup1\n      0x1\n      add\n      sload\n      swap1\n      dup1\n      0x2\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x2\n      add\n      0x4\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x2\n      add\n      0x8\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      dup1\n      0x2\n      add\n      0xa\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":603:648  mapping(uint => address) public zombieToOwner */\n    tag_15:\n      mstore(0x20, 0x5)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":1188:1433  function createRandomZombie(string _name) public {\r... */\n    tag_18:\n        /* \"contracts/zombiefactory.sol\":1301:1313  uint randDna */\n      0x0\n        /* \"contracts/zombiefactory.sol\":1288:1289  0 */\n      dup1\n        /* \"contracts/zombiefactory.sol\":1256:1272  ownerZombieCount */\n      0x6\n        /* \"contracts/zombiefactory.sol\":1256:1284  ownerZombieCount[msg.sender] */\n      0x0\n        /* \"contracts/zombiefactory.sol\":1273:1283  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":1256:1284  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":1256:1289  ownerZombieCount[msg.sender] == 0 */\n      eq\n        /* \"contracts/zombiefactory.sol\":1248:1290  require(ownerZombieCount[msg.sender] == 0) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/zombiefactory.sol\":1316:1341  _generateRandomDna(_name) */\n      tag_29\n        /* \"contracts/zombiefactory.sol\":1335:1340  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1316:1334  _generateRandomDna */\n      tag_30\n        /* \"contracts/zombiefactory.sol\":1316:1341  _generateRandomDna(_name) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/zombiefactory.sol\":1301:1341  uint randDna = _generateRandomDna(_name) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1382:1385  100 */\n      0x64\n        /* \"contracts/zombiefactory.sol\":1372:1379  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1372:1385  randDna % 100 */\n      dup2\n      iszero\n      iszero\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      mod\n        /* \"contracts/zombiefactory.sol\":1362:1369  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1362:1385  randDna - randDna % 100 */\n      sub\n        /* \"contracts/zombiefactory.sol\":1352:1385  randDna = randDna - randDna % 100 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1396:1425  _createZombie(_name, randDna) */\n      tag_32\n        /* \"contracts/zombiefactory.sol\":1410:1415  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1417:1424  randDna */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1396:1409  _createZombie */\n      tag_33\n        /* \"contracts/zombiefactory.sol\":1396:1425  _createZombie(_name, randDna) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/zombiefactory.sol\":1188:1433  function createRandomZombie(string _name) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":245:265  address public owner */\n    tag_21:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_24:\n        /* \"contracts/ownable.sol\":676:681  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":662:681  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":662:672  msg.sender */\n      caller\n        /* \"contracts/ownable.sol\":662:681  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable.sol\":654:682  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_35\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_35:\n        /* \"contracts/ownable.sol\":962:963  0 */\n      0x0\n        /* \"contracts/ownable.sol\":942:964  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":942:950  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":942:964  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownable.sol\":934:965  require(newOwner != address(0)) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"contracts/ownable.sol\":1000:1008  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":972:1009  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":993:998  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":972:1009  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":1024:1032  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1016:1021  owner */\n      0x0\n      dup1\n        /* \"contracts/ownable.sol\":1016:1032  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":865:1038  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":1024:1180  function _generateRandomDna(string _str) private view returns (uint) {\r... */\n    tag_30:\n        /* \"contracts/zombiefactory.sol\":1087:1091  uint */\n      0x0\n        /* \"contracts/zombiefactory.sol\":1104:1113  uint rand */\n      dup1\n        /* \"contracts/zombiefactory.sol\":1131:1135  _str */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1121:1136  keccak256(_str) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_39:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:60   */\n      lt\n        /* \"--CODEGEN--\":51:57   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:181   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:170   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:92   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:117   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:142   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_39)\n    tag_40:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:262   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:253   */\n      exp\n        /* \"--CODEGEN--\":246:249   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:314   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:304   */\n      mload\n        /* \"--CODEGEN--\":295:298   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:349   */\n      mload\n        /* \"--CODEGEN--\":340:343   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:379   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:371   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/zombiefactory.sol\":1116:1137  uint(keccak256(_str)) */\n      0x1\n      swap1\n      div\n        /* \"contracts/zombiefactory.sol\":1104:1137  uint rand = uint(keccak256(_str)) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1162:1172  dnaModulus */\n      sload(0x2)\n        /* \"contracts/zombiefactory.sol\":1155:1159  rand */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1155:1172  rand % dnaModulus */\n      dup2\n      iszero\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      mod\n        /* \"contracts/zombiefactory.sol\":1148:1172  return rand % dnaModulus */\n      swap2\n      pop\n        /* \"contracts/zombiefactory.sol\":1024:1180  function _generateRandomDna(string _str) private view returns (uint) {\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":705:1016  function _createZombie(string _name, uint _dna) internal {\r... */\n    tag_33:\n        /* \"contracts/zombiefactory.sol\":773:780  uint id */\n      0x0\n        /* \"contracts/zombiefactory.sol\":852:853  1 */\n      0x1\n        /* \"contracts/zombiefactory.sol\":783:790  zombies */\n      0x4\n        /* \"contracts/zombiefactory.sol\":783:849  zombies.push(Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0)) */\n      dup1\n      sload\n      dup1\n      0x1\n      add\n      dup3\n      dup2\n      tag_44\n      swap2\n      swap1\n      jump\t// in(tag_45)\n    tag_44:\n      swap2\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x3\n      mul\n      add\n      0x0\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      0xc0\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/zombiefactory.sol\":803:808  _name */\n      dup9\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":810:814  _dna */\n      dup8\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":815:816  1 */\n      0x1\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":830:842  cooldownTime */\n      sload(0x3)\n        /* \"contracts/zombiefactory.sol\":824:827  now */\n      timestamp\n        /* \"contracts/zombiefactory.sol\":824:842  now + cooldownTime */\n      add\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":844:845  0 */\n      0x0\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":846:847  0 */\n      0x0\n        /* \"contracts/zombiefactory.sol\":796:848  Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0) */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefactory.sol\":783:849  zombies.push(Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0)) */\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x0\n      dup3\n      add\n      mload\n      dup2\n      0x0\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_47\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_48)\n    tag_47:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x1\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      exp(0x100, 0x4)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      exp(0x100, 0x8)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      exp(0x100, 0xa)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":783:853  zombies.push(Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0)) - 1 */\n      sub\n        /* \"contracts/zombiefactory.sol\":773:853  uint id = zombies.push(Zombie(_name, _dna,1,uint32(now + cooldownTime),0,0)) - 1 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":884:894  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":864:877  zombieToOwner */\n      0x5\n        /* \"contracts/zombiefactory.sol\":864:881  zombieToOwner[id] */\n      0x0\n        /* \"contracts/zombiefactory.sol\":878:880  id */\n      dup4\n        /* \"contracts/zombiefactory.sol\":864:881  zombieToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/zombiefactory.sol\":864:894  zombieToOwner[id] = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":936:971  ownerZombieCount[msg.sender].add(1) */\n      tag_49\n        /* \"contracts/zombiefactory.sol\":969:970  1 */\n      0x1\n        /* \"contracts/zombiefactory.sol\":936:952  ownerZombieCount */\n      0x6\n        /* \"contracts/zombiefactory.sol\":936:964  ownerZombieCount[msg.sender] */\n      0x0\n        /* \"contracts/zombiefactory.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":936:964  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":936:968  ownerZombieCount[msg.sender].add */\n      tag_50\n      swap1\n        /* \"contracts/zombiefactory.sol\":936:971  ownerZombieCount[msg.sender].add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"contracts/zombiefactory.sol\":905:921  ownerZombieCount */\n      0x6\n        /* \"contracts/zombiefactory.sol\":905:933  ownerZombieCount[msg.sender] */\n      0x0\n        /* \"contracts/zombiefactory.sol\":922:932  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":905:933  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/zombiefactory.sol\":905:971  ownerZombieCount[msg.sender] = ownerZombieCount[msg.sender].add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":982:1008  NewZombie(id, _name, _dna) */\n      0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7\n        /* \"contracts/zombiefactory.sol\":992:994  id */\n      dup2\n        /* \"contracts/zombiefactory.sol\":996:1001  _name */\n      dup5\n        /* \"contracts/zombiefactory.sol\":1003:1007  _dna */\n      dup5\n        /* \"contracts/zombiefactory.sol\":982:1008  NewZombie(id, _name, _dna) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_51:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_51)\n    tag_52:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_54\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_54:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/zombiefactory.sol\":705:1016  function _createZombie(string _name, uint _dna) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/safemath.sol\":1048:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_50:\n        /* \"contracts/safemath.sol\":1106:1113  uint256 */\n      0x0\n        /* \"contracts/safemath.sol\":1122:1131  uint256 c */\n      dup1\n        /* \"contracts/safemath.sol\":1138:1139  b */\n      dup3\n        /* \"contracts/safemath.sol\":1134:1135  a */\n      dup5\n        /* \"contracts/safemath.sol\":1134:1139  a + b */\n      add\n        /* \"contracts/safemath.sol\":1122:1139  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/safemath.sol\":1158:1159  a */\n      dup4\n        /* \"contracts/safemath.sol\":1153:1154  c */\n      dup2\n        /* \"contracts/safemath.sol\":1153:1159  c >= a */\n      lt\n      iszero\n        /* \"contracts/safemath.sol\":1146:1160  assert(c >= a) */\n      iszero\n      iszero\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n        /* \"contracts/safemath.sol\":1174:1175  c */\n      dup1\n        /* \"contracts/safemath.sol\":1167:1175  return c */\n      swap2\n      pop\n        /* \"contracts/safemath.sol\":1048:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":81:1436  contract ZombieFactory is Ownable {\r... */\n    tag_45:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_57\n      jumpi\n      0x3\n      mul\n      dup2\n      0x3\n      mul\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_58\n      swap2\n      swap1\n      jump\t// in(tag_59)\n    tag_58:\n    tag_57:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_48:\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_61\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_60)\n    tag_61:\n      dup3\n      dup1\n      add\n      0x1\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_60\n      jumpi\n      swap2\n      dup3\n      add\n    tag_62:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_62)\n    tag_63:\n    tag_60:\n      pop\n      swap1\n      pop\n      tag_64\n      swap2\n      swap1\n      jump\t// in(tag_65)\n    tag_64:\n      pop\n      swap1\n      jump\t// out\n    tag_59:\n      tag_66\n      swap2\n      swap1\n    tag_67:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_68\n      jumpi\n      0x0\n      dup1\n      dup3\n      add\n      0x0\n      tag_69\n      swap2\n      swap1\n      jump\t// in(tag_70)\n    tag_69:\n      0x1\n      dup3\n      add\n      0x0\n      swap1\n      sstore\n      0x2\n      dup3\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      swap1\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x2\n      dup3\n      add\n      exp(0x100, 0x4)\n      dup2\n      sload\n      swap1\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x2\n      dup3\n      add\n      exp(0x100, 0x8)\n      dup2\n      sload\n      swap1\n      0xffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x2\n      dup3\n      add\n      exp(0x100, 0xa)\n      dup2\n      sload\n      swap1\n      0xffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      0x3\n      add\n      jump(tag_67)\n    tag_68:\n      pop\n      swap1\n      jump\n    tag_66:\n      swap1\n      jump\t// out\n    tag_65:\n      tag_71\n      swap2\n      swap1\n    tag_72:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_72)\n    tag_73:\n      pop\n      swap1\n      jump\n    tag_71:\n      swap1\n      jump\t// out\n    tag_70:\n      pop\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      0x0\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      pop\n      jump(tag_74)\n    tag_75:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      jump\t// in(tag_65)\n    tag_76:\n    tag_74:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ec9f31a9455b3c6c718fffcff0194ff1ced6d263830a475be1475d03cfceb9e70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526010600155600154600a0a60025562015180600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ab9806100686000396000f30060606040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632052465e14610072578063528b7b8f146101765780637bff0a01146101d95780638da5cb5b14610236578063f2fde38b1461028b575b600080fd5b341561007d57600080fd5b61009360048080359060200190919050506102c4565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff1681526020018281038252888181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101625780601f1061013757610100808354040283529160200191610162565b820191906000526020600020905b81548152906001019060200180831161014557829003601f168201915b505097505050505050505060405180910390f35b341561018157600080fd5b610197600480803590602001909190505061034a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101e457600080fd5b610234600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061037d565b005b341561024157600080fd5b6102496103f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029657600080fd5b6102c2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061041b565b005b6004818154811015156102d357fe5b906000526020600020906003020160009150905080600001908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156103cc57600080fd5b6103d582610570565b90506064818115156103e357fe5b06810390506103f282826105f2565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561047657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104b257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080826040518082805190602001908083835b6020831015156105a95780518252602082019150602081019050602083039250610584565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190049050600254818115156105e957fe5b06915050919050565b600060016004805480600101828161060a91906108df565b9160005260206000209060030201600060c060405190810160405280888152602001878152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090919091506000820151816000019080519060200190610684929190610911565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107cd6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c190919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610880578082015181840152602081019050610865565b50505050905090810190601f1680156108ad5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008082840190508381101515156108d557fe5b8091505092915050565b81548183558181151161090c5760030281600302836000526020600020918201910161090b9190610991565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061095257805160ff1916838001178555610980565b82800160010185558215610980579182015b8281111561097f578251825591602001919060010190610964565b5b50905061098d9190610a20565b5090565b610a1d91905b80821115610a1957600080820160006109b09190610a45565b60018201600090556002820160006101000a81549063ffffffff02191690556002820160046101000a81549063ffffffff02191690556002820160086101000a81549061ffff021916905560028201600a6101000a81549061ffff021916905550600301610997565b5090565b90565b610a4291905b80821115610a3e576000816000905550600101610a26565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a6b5750610a8a565b601f016020900490600052602060002090810190610a899190610a20565b5b505600a165627a7a72305820ec9f31a9455b3c6c718fffcff0194ff1ced6d263830a475be1475d03cfceb9e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x10 PUSH1 0x1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xA EXP PUSH1 0x2 SSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xAB9 DUP1 PUSH2 0x68 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2052465E EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x162 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x137 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x162 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x145 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D5 DUP3 PUSH2 0x570 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 ISZERO ISZERO PUSH2 0x3E3 JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x3F2 DUP3 DUP3 PUSH2 0x5F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x5A9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 ISZERO ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x8DF JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x684 SWAP3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7CD PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x880 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x865 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8AD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x8D5 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x90C JUMPI PUSH1 0x3 MUL DUP2 PUSH1 0x3 MUL DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x952 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x980 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x980 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x97F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x964 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x98D SWAP2 SWAP1 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0x3 ADD PUSH2 0x997 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA42 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xA6B JUMPI POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0xA20 JUMP JUMPDEST JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xec SWAP16 BALANCE 0xa9 GASLIMIT JUMPDEST EXTCODECOPY PUSH13 0x718FFFCFF0194FF1CED6D26383 EXP 0x47 JUMPDEST 0xe1 0x47 0x5d SUB 0xcf 0xce 0xb9 0xe7 STOP 0x29 ",
							"sourceMap": "81:1355:2:-;;;313:2;296:19;;346:9;;340:2;:15;322:33;;382:6;362:26;;523:10:0;515:5;;:18;;;;;;;;;;;;;;;;;;81:1355:2;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632052465e14610072578063528b7b8f146101765780637bff0a01146101d95780638da5cb5b14610236578063f2fde38b1461028b575b600080fd5b341561007d57600080fd5b61009360048080359060200190919050506102c4565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff1681526020018281038252888181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101625780601f1061013757610100808354040283529160200191610162565b820191906000526020600020905b81548152906001019060200180831161014557829003601f168201915b505097505050505050505060405180910390f35b341561018157600080fd5b610197600480803590602001909190505061034a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101e457600080fd5b610234600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061037d565b005b341561024157600080fd5b6102496103f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029657600080fd5b6102c2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061041b565b005b6004818154811015156102d357fe5b906000526020600020906003020160009150905080600001908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156103cc57600080fd5b6103d582610570565b90506064818115156103e357fe5b06810390506103f282826105f2565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561047657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104b257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080826040518082805190602001908083835b6020831015156105a95780518252602082019150602081019050602083039250610584565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190049050600254818115156105e957fe5b06915050919050565b600060016004805480600101828161060a91906108df565b9160005260206000209060030201600060c060405190810160405280888152602001878152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090919091506000820151816000019080519060200190610684929190610911565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107cd6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c190919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610880578082015181840152602081019050610865565b50505050905090810190601f1680156108ad5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008082840190508381101515156108d557fe5b8091505092915050565b81548183558181151161090c5760030281600302836000526020600020918201910161090b9190610991565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061095257805160ff1916838001178555610980565b82800160010185558215610980579182015b8281111561097f578251825591602001919060010190610964565b5b50905061098d9190610a20565b5090565b610a1d91905b80821115610a1957600080820160006109b09190610a45565b60018201600090556002820160006101000a81549063ffffffff02191690556002820160046101000a81549063ffffffff02191690556002820160086101000a81549061ffff021916905560028201600a6101000a81549061ffff021916905550600301610997565b5090565b90565b610a4291905b80821115610a3e576000816000905550600101610a26565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a6b5750610a8a565b601f016020900490600052602060002090810190610a899190610a20565b5b505600a165627a7a72305820ec9f31a9455b3c6c718fffcff0194ff1ced6d263830a475be1475d03cfceb9e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2052465E EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x162 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x137 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x162 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x145 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D5 DUP3 PUSH2 0x570 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 ISZERO ISZERO PUSH2 0x3E3 JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x3F2 DUP3 DUP3 PUSH2 0x5F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x5A9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 ISZERO ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x8DF JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x684 SWAP3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7CD PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x880 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x865 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8AD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x8D5 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x90C JUMPI PUSH1 0x3 MUL DUP2 PUSH1 0x3 MUL DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x952 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x980 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x980 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x97F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x964 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x98D SWAP2 SWAP1 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0x3 ADD PUSH2 0x997 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA42 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xA6B JUMPI POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0xA20 JUMP JUMPDEST JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xec SWAP16 BALANCE 0xa9 GASLIMIT JUMPDEST EXTCODECOPY PUSH13 0x718FFFCFF0194FF1CED6D26383 EXP 0x47 JUMPDEST 0xe1 0x47 0x5d SUB 0xcf 0xce 0xb9 0xe7 STOP 0x29 ",
							"sourceMapo;603:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1188:245::-;1301:12;1288:1;1256:16;:28;1273:10;1256:28;;;;;;;;;;;;;;;;:33;1248:42;;;;;;;;1316:25;1335:5;1316:18;:25::i;:::-;1301:40;;1382:3;1372:7;:13;;;;;;;;1362:7;:23;1352:33;;1396:29;1410:5;1417:7;1396:13;:29::i;:::-;1188:245;;:::o;245:20:0:-;;;;;;;;;;;;;:::o;865:173::-;676:5;;;;;;;;;;;662:19;;:10;:19;;;654:28;;;;;;;;962:1;942:22;;:8;:22;;;;934:31;;;;;;;;1000:8;972:37;;993:5;;;;;;;;;;;972:37;;;;;;;;;;;;1024:8;1016:5;;:16;;;;;;;;;;;;;;;;;;865:173;:::o;1024:156:2:-;1087:4;1104:9;1131:4;1121:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;1116:21:2;;;1104:33;;1162:10;;1155:4;:17;;;;;;;;1148:24;;1024:156;;;;:::o;705:311::-;773:7;852:1;783:7;:66;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;796:52;;;;;;;;;803:5;796:52;;;;810:4;796:52;;;;815:1;796:52;;;;;;830:12;;824:3;:18;796:52;;;;;;844:1;796:52;;;;;;846:1;796:52;;;;;783:66;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:70;773:80;;884:10;864:13;:17;878:2;864:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;936:35;969:1;936:16;:28;953:10;936:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;905:16;:28;922:10;905:28;;;;;;;;;;;;;;;:66;;;;982:26;992:2;996:5;1003:4;982:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:311:2;;;:::o;1048:133:1:-;1106:7;1122:9;1138:1;1134;:5;1122:17;;1158:1;1153;:6;;1146:14;;;;;;1174:1;1167:8;;1048:133;;;;;:::o;81:1355:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "549000",
								"executionCost": "81104",
								"totalCost": "630104"
							},
							"external": {
								"createRandomZombie(string)": "infinite",
								"owner()": "500",
								"transferOwnership(address)": "22626",
								"zombieToOwner(uint256)": "555",
								"zombies(uint256)": "infinite"
							},
							"internal": {
								"_createZombie(string memory,uint256)": "infinite",
								"_generateRandomDna(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "MSTORE"
								},
								{
									"begin": 313,
									"end": 315,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 296,
									"end": 315,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 296,
									"end": 315,
									"name": "SSTORE"
								},
								{
									"begin": 346,
									"end": 355,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 346,
									"end": 355,
									"name": "SLOAD"
								},
								{
									"begin": 340,
									"end": 342,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 340,
									"end": 355,
									"name": "EXP"
								},
								{
									"begin": 322,
									"end": 355,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 322,
									"end": 355,
									"name": "SSTORE"
								},
								{
									"begin": 382,
									"end": 388,
									"name": "PUSH",
									"value": "15180"
								},
								{
									"begin": 362,
									"end": 388,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 362,
									"end": 388,
									"name": "SSTORE"
								},
								{
									"begin": 523,
									"end": 533,
									"name": "CALLER"
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 515,
									"end": 520,
									"name": "DUP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "EXP"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP2"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SLOAD"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP2"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "MUL"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "NOT"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "AND"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SWAP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP4"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "AND"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "MUL"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "OR"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SWAP1"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "SSTORE"
								},
								{
									"begin": 515,
									"end": 533,
									"name": "POP"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "DUP1"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "CODECOPY"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 81,
									"end": 1436,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ec9f31a9455b3c6c718fffcff0194ff1ced6d263830a475be1475d03cfceb9e70029",
									".code": [
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "LT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2052465E"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "528B7B8F"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "REVERT"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "CALLVALUE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "REVERT"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP8"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP7"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP6"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP5"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP9"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MUL"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MUL"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "LT"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MUL"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "KECCAK256"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP8"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "RETURN"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "CALLVALUE"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMPI"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "REVERT"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "ADD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "MLOAD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP3"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "AND"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "AND"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "MSTORE"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "ADD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "MLOAD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SUB"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "RETURN"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "CALLVALUE"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ISZERO"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMPI"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "REVERT"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP3"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DIV"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "MUL"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "MLOAD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP4"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP3"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP4"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP4"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP3"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP5"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "DUP3"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "STOP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "CALLVALUE"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "ISZERO"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPI"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "REVERT"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP3"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MSTORE"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "ADD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SUB"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "RETURN"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "CALLVALUE"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPI"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "REVERT"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "STOP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "LT"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "KECCAK256"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MUL"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP7"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "MSTORE"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "MSTORE"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "KECCAK256"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SLOAD"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "EXP"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DIV"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "AND"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "DUP2"
										},
										{
											"begin": 603,
											"end": 648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1289,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 1272,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1283,
											"name": "CALLER"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "SWAP1"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "KECCAK256"
										},
										{
											"begin": 1256,
											"end": 1284,
											"name": "SLOAD"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "EQ"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "JUMPI"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "REVERT"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1248,
											"end": 1290,
											"name": "JUMPDEST"
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP3"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "JUMPDEST"
										},
										{
											"begin": 1301,
											"end": 1341,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1341,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1372,
											"end": 1379,
											"name": "DUP2"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "DUP2"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "ISZERO"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "ISZERO"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "JUMPI"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "INVALID"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "JUMPDEST"
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "MOD"
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP2"
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SUB"
										},
										{
											"begin": 1352,
											"end": 1385,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1385,
											"name": "POP"
										},
										{
											"begin": 1396,
											"end": 1425,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "DUP3"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "DUP3"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1396,
											"end": 1425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1425,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1396,
											"end": 1425,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SLOAD"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "EXP"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DIV"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 245,
											"end": 265,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SLOAD"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "EXP"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DIV"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 672,
											"name": "CALLER"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "EQ"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "ISZERO"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "ISZERO"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "JUMPI"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "REVERT"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "EQ"
										},
										{
											"begin": 942,
											"end": 964,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "REVERT"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SLOAD"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "EXP"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DIV"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SWAP2"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SUB"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 972,
											"end": 1009,
											"name": "LOG3"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "EXP"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SLOAD"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "MUL"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "NOT"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "DUP4"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "MUL"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "OR"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "SSTORE"
										},
										{
											"begin": 1016,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1135,
											"name": "DUP3"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "MLOAD"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP3"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "MLOAD"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "ADD"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP4"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 60,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 57,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 181,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 92,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 117,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 142,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 262,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 253,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 249,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 314,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 304,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 349,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 343,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 379,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 371,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "KECCAK256"
										},
										{
											"begin": 1116,
											"end": 1137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1116,
											"end": 1137,
											"name": "DIV"
										},
										{
											"begin": 1104,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "SLOAD"
										},
										{
											"begin": 1155,
											"end": 1159,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "ISZERO"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "ISZERO"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "INVALID"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1172,
											"name": "MOD"
										},
										{
											"begin": 1148,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1148,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1180,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 783,
											"end": 790,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "KECCAK256"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MLOAD"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "SWAP1"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP9"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 810,
											"end": 814,
											"name": "DUP8"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 830,
											"end": 842,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 830,
											"end": 842,
											"name": "SLOAD"
										},
										{
											"begin": 824,
											"end": 827,
											"name": "TIMESTAMP"
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 844,
											"end": 845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 783,
											"end": 853,
											"name": "SUB"
										},
										{
											"begin": 773,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 853,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 894,
											"name": "CALLER"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 878,
											"end": 880,
											"name": "DUP4"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "MSTORE"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "ADD"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "MSTORE"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "ADD"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "KECCAK256"
										},
										{
											"begin": 864,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "EXP"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "SLOAD"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "MUL"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "NOT"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "AND"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "DUP4"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "AND"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "MUL"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "OR"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "SSTORE"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 936,
											"end": 952,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "KECCAK256"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 936,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 936,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SWAP2"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 921,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 932,
											"name": "CALLER"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "MSTORE"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "ADD"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "KECCAK256"
										},
										{
											"begin": 905,
											"end": 971,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 971,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 971,
											"name": "POP"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7"
										},
										{
											"begin": 992,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "DUP5"
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "DUP5"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MLOAD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP5"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP4"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP3"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SUB"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP3"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP5"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MLOAD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SWAP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "MLOAD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP4"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP5"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "LOG1"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1016,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP1"
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP3"
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP5"
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1122,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1122,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "DUP4"
										},
										{
											"begin": 1153,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "LT"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "ISZERO"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "ISZERO"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "ISZERO"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "JUMPI"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "INVALID"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "SWAP3"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "GT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "KECCAK256"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SUB"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "KECCAK256"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "LT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "NOT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "OR"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP6"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP6"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "GT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "GT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EXP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "NOT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EXP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "NOT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EXP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "NOT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "EXP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "NOT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "GT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MUL"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SUB"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "LT"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "KECCAK256"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createRandomZombie(string)": "7bff0a01",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b",
							"zombieToOwner(uint256)": "528b7b8f",
							"zombies(uint256)": "2052465e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.19+commit.c4cbbb05\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint32\"},{\"name\":\"readyTime\",\"type\":\"uint32\"},{\"name\":\"winCount\",\"type\":\"uint16\"},{\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/zombiefactory.sol\":\"ZombieFactory\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x9669dac17bf07f37966ad82d89b147ed7006cb9937bc1eca4957b73b0f72a136\",\"urls\":[\"bzzr://0d5b3eb0370a978d7852e84b9c31c234c44710fb03ea2f6eafbda9af3160f395\"]},\"contracts/safemath.sol\":{\"keccak256\":\"0x6fbc3d8ff7edeb4b06395f245c72ebe51789c93a8313d5335dcbc0bdce4c19e4\",\"urls\":[\"bzzr://1256e1270c7cd10f1fc36664c905f3aee5758ea9a908d6dafab91d350ffc52b0\"]},\"contracts/zombiefactory.sol\":{\"keccak256\":\"0x1457ce5dc9a071b9f257de8ec5f1f47fcd18a4efad6b3f86a08e64928ae895a7\",\"urls\":[\"bzzr://df2e3a54a5ec5f072dd68df18074479503ec1bfd14c89e6909e6caca2b9d2dd2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/ownable.sol": {
				"ast": {
					"absolutePath": "contracts/ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							55
						]
					},
					"id": 56,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 55,
									"src": "245:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 9,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "299:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "330:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "298:57:0"
									},
									"src": "272:84:0"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "508:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 12,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "515:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "523:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "523:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "515:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "515:18:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:0:0"
									},
									"scope": 55,
									"src": "482:57:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "647:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "662:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "662:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 23,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "662:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "654:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "654:28:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "689:1:0"
											}
										]
									},
									"id": 29,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:2:0"
									},
									"src": "626:70:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "927:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "942:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "962:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "954:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "954:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "942:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "934:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 45,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "993:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 46,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1000:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "972:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "972:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1016:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1024:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1016:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1016:16:0"
											}
										]
									},
									"id": 54,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 34,
											"modifierName": {
												"argumentTypes": null,
												"id": 33,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 29,
												"src": "917:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "917:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:0:0"
									},
									"scope": 55,
									"src": "865:173:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 56,
							"src": "223:820:0"
						}
					],
					"src": "0:1045:0"
				},
				"id": 0
			},
			"contracts/safemath.sol": {
				"ast": {
					"absolutePath": "contracts/safemath.sol",
					"exportedSymbols": {
						"SafeMath": [
							153
						],
						"SafeMath16": [
							345
						],
						"SafeMath32": [
							249
						]
					},
					"id": 346,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 57,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "280:113:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "291:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "296:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "291:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 72,
												"nodeType": "IfStatement",
												"src": "287:37:1",
												"trueBody": {
													"id": 71,
													"nodeType": "Block",
													"src": "299:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "315:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 70,
															"nodeType": "Return",
															"src": "308:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "330:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "330:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "342:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 76,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "346:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "342:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "330:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 80,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "361:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "365:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "361:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "370:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "361:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 79,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "354:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "354:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "354:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "386:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 88,
												"nodeType": "Return",
												"src": "379:8:1"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "226:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "237:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "225:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "271:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "270:9:1"
									},
									"scope": 153,
									"src": "213:180:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "547:203:1",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "629:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "629:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "641:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 102,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "645:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "641:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "629:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "743:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 106,
												"nodeType": "Return",
												"src": "736:8:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "493:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "504:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "492:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "538:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:9:1"
									},
									"scope": 153,
									"src": "480:270:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "935:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "949:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 119,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "954:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "949:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 117,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "942:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "942:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 123,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "970:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "974:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "970:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 126,
												"nodeType": "Return",
												"src": "963:12:1"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "881:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "892:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "880:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 153,
									"src": "868:113:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1115:66:1",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1122:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1134:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1138:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1134:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1153:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 145,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1158:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1153:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1146:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1146:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1146:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "1174:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 150,
												"nodeType": "Return",
												"src": "1167:8:1"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1061:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1072:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1060:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1106:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1105:9:1"
									},
									"scope": 153,
									"src": "1048:133:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 346,
							"src": "122:1062:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath32\r\n@dev SafeMath library implemented for uint32\r",
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249
							],
							"name": "SafeMath32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1359:112:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 162,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1370:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1375:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1370:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 168,
												"nodeType": "IfStatement",
												"src": "1366:37:1",
												"trueBody": {
													"id": 167,
													"nodeType": "Block",
													"src": "1378:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1394:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 161,
															"id": 166,
															"nodeType": "Return",
															"src": "1387:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 186,
														"src": "1409:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 169,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1409:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1420:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 172,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1424:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1420:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1409:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "1439:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1443:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1439:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1439:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 175,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1432:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1432:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 183,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 170,
													"src": "1464:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 161,
												"id": 184,
												"nodeType": "Return",
												"src": "1457:8:1"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1308:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 154,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1308:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1318:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 156,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1318:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1307:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1351:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 159,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1351:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1350:8:1"
									},
									"scope": 249,
									"src": "1295:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1541:202:1",
										"statements": [
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "1623:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 195,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 197,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1634:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1638:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1634:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1623:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 201,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "1736:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 194,
												"id": 202,
												"nodeType": "Return",
												"src": "1729:8:1"
											}
										]
									},
									"id": 204,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1490:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 187,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1490:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1500:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 189,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1500:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1489:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1533:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 192,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1533:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1532:8:1"
									},
									"scope": 249,
									"src": "1477:266:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "1813:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1827:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1832:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1827:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 213,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1820:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1820:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 219,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "1848:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1852:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 212,
												"id": 222,
												"nodeType": "Return",
												"src": "1841:12:1"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1762:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 205,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1762:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1772:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 207,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1805:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 210,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:8:1"
									},
									"scope": 249,
									"src": "1749:110:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "1929:65:1",
										"statements": [
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "1936:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 233,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1936:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 235,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1947:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 236,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1951:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1947:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1936:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 240,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1966:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "1971:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1966:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 239,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1959:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1959:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 245,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "1987:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 232,
												"id": 246,
												"nodeType": "Return",
												"src": "1980:8:1"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1878:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 225,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1888:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 227,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1888:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1877:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1921:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 230,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1921:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1920:8:1"
									},
									"scope": 249,
									"src": "1865:129:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 346,
							"src": "1269:728:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath16\r\n@dev SafeMath library implemented for uint16\r",
							"fullyImplemented": true,
							"id": 345,
							"linearizedBaseContracts": [
								345
							],
							"name": "SafeMath16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2172:112:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 258,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2183:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2188:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2183:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 264,
												"nodeType": "IfStatement",
												"src": "2179:37:1",
												"trueBody": {
													"id": 263,
													"nodeType": "Block",
													"src": "2191:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2207:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 257,
															"id": 262,
															"nodeType": "Return",
															"src": "2200:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "2222:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 265,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2222:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 268,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2237:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2233:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2222:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 272,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "2252:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 273,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "2256:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "2252:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 275,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "2261:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2252:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 271,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2245:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2245:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 279,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "2277:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 257,
												"id": 280,
												"nodeType": "Return",
												"src": "2270:8:1"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2121:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 250,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2121:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2131:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 252,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2131:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2120:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2164:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 255,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2164:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2163:8:1"
									},
									"scope": 345,
									"src": "2108:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2354:202:1",
										"statements": [
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "2436:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 291,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2436:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2451:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "2549:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 290,
												"id": 298,
												"nodeType": "Return",
												"src": "2542:8:1"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2303:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 283,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2313:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 285,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2313:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2302:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2346:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 288,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2346:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2345:8:1"
									},
									"scope": 345,
									"src": "2290:266:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2626:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "2640:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2645:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2640:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 309,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2633:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2633:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 315,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2665:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2661:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 308,
												"id": 318,
												"nodeType": "Return",
												"src": "2654:12:1"
											}
										]
									},
									"id": 320,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2575:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 301,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2585:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 303,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2585:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2574:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2618:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 306,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2618:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2617:8:1"
									},
									"scope": 345,
									"src": "2562:110:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2742:65:1",
										"statements": [
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "2749:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 329,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2749:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "2760:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2764:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2760:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2749:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 336,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2779:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "2784:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2779:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 335,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2772:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2772:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 341,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "2800:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 328,
												"id": 342,
												"nodeType": "Return",
												"src": "2793:8:1"
											}
										]
									},
									"id": 344,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2691:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 321,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2691:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2701:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 323,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2701:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2690:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2734:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 326,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2733:8:1"
									},
									"scope": 345,
									"src": "2678:129:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 346,
							"src": "2082:728:1"
						}
					],
					"src": "0:2812:1"
				},
				"id": 1
			},
			"contracts/zombiefactory.sol": {
				"ast": {
					"absolutePath": "contracts/zombiefactory.sol",
					"exportedSymbols": {
						"ZombieFactory": [
							512
						]
					},
					"id": 513,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 347,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "contracts/ownable.sol",
							"file": "./ownable.sol",
							"id": 348,
							"nodeType": "ImportDirective",
							"scope": 513,
							"sourceUnit": 56,
							"src": "28:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/safemath.sol",
							"file": "./safemath.sol",
							"id": 349,
							"nodeType": "ImportDirective",
							"scope": 513,
							"sourceUnit": 346,
							"src": "53:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 55,
										"src": "107:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$55",
											"typeString": "contract Ownable"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "107:7:2"
								}
							],
							"contractDependencies": [
								55
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512,
								55
							],
							"name": "ZombieFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 354,
									"libraryName": {
										"contractScope": null,
										"id": 352,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 153,
										"src": "130:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$153",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "124:27:2",
									"typeName": {
										"id": 353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 357,
									"libraryName": {
										"contractScope": null,
										"id": 355,
										"name": "SafeMath32",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 249,
										"src": "163:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath32_$249",
											"typeString": "library SafeMath32"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "157:28:2",
									"typeName": {
										"id": 356,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "178:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									}
								},
								{
									"id": 360,
									"libraryName": {
										"contractScope": null,
										"id": 358,
										"name": "SafeMath16",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 345,
										"src": "197:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath16_$345",
											"typeString": "library SafeMath16"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "191:28:2",
									"typeName": {
										"id": 359,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "212:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									}
								},
								{
									"anonymous": false,
									"id": 368,
									"name": "NewZombie",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"name": "zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "250:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": false,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "265:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "265:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": false,
												"name": "dna",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "278:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "249:38:2"
									},
									"src": "234:54:2"
								},
								{
									"constant": false,
									"id": 371,
									"name": "dnaDigits",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "296:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "296:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:2:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 376,
									"name": "dnaModulus",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "322:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "322:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 373,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "340:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"id": 374,
											"name": "dnaDigits",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 371,
											"src": "346:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "340:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 379,
									"name": "cooldownTime",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "362:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 377,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "362:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "382:6:2",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ZombieFactory.Zombie",
									"id": 392,
									"members": [
										{
											"constant": false,
											"id": 381,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "422:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string storage pointer"
											},
											"typeName": {
												"id": 380,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "422:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string storage pointer"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 383,
											"name": "dna",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "444:8:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 382,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "444:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 385,
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "463:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 384,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "463:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 387,
											"name": "readyTime",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "486:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 386,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "486:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"name": "winCount",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "513:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 388,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "513:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 391,
											"name": "lossCount",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "539:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 390,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "539:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Zombie",
									"nodeType": "StructDefinition",
									"scope": 512,
									"src": "397:166:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 395,
									"name": "zombies",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "571:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Zombie_$392_storage_$dyn_storage",
										"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 393,
											"name": "Zombie",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 392,
											"src": "571:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Zombie_$392_storage_ptr",
												"typeString": "struct ZombieFactory.Zombie storage pointer"
											}
										},
										"id": 394,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "571:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Zombie_$392_storage_$dyn_storage_ptr",
											"typeString": "struct ZombieFactory.Zombie storage ref[] storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 399,
									"name": "zombieToOwner",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "603:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 398,
										"keyType": {
											"id": 396,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "611:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "603:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 397,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "619:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 403,
									"name": "ownerZombieCount",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "655:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 402,
										"keyType": {
											"id": 400,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "663:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "655:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 401,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "674:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "762:254:2",
										"statements": [
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"name": "id",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "773:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "773:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 415,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "803:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 416,
																		"name": "_dna",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "810:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "815:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 419,
																					"name": "now",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "824:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 420,
																					"name": "cooldownTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 379,
																					"src": "830:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "824:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "817:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": "uint32"
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "817:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "844:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "846:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"name": "Zombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "796:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Zombie_$392_storage_ptr_$",
																		"typeString": "type(struct ZombieFactory.Zombie storage pointer)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "796:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Zombie_$392_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Zombie_$392_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 412,
																"name": "zombies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "783:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Zombie_$392_storage_$dyn_storage",
																	"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "783:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Zombie_$392_storage_$returns$_t_uint256_$",
																"typeString": "function (struct ZombieFactory.Zombie storage ref) returns (uint256)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "783:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "852:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "783:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "773:80:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "zombieToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "864:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "878:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "864:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 433,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "884:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "884:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "864:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "864:30:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 437,
															"name": "ownerZombieCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "905:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 440,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "922:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "922:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "905:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "969:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 441,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "936:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 442,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "953:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "953:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "936:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "936:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "936:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "905:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "905:66:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 451,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "992:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 452,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "_dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1003:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 450,
														"name": "NewZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "982:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "982:26:2"
											}
										]
									},
									"id": 457,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_createZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "_dna",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "742:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:25:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:0:2"
									},
									"scope": 512,
									"src": "705:311:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1093:87:2",
										"statements": [
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"name": "rand",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "1104:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1104:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 468,
																	"name": "_str",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "1131:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 467,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "1121:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1116:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1104:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 472,
														"name": "rand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "1155:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 473,
														"name": "dnaModulus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1162:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1155:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 463,
												"id": 475,
												"nodeType": "Return",
												"src": "1148:24:2"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "_generateRandomDna",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "_str",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1052:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1051:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1087:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1087:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1086:6:2"
									},
									"scope": 512,
									"src": "1024:156:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "1237:196:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 483,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1256:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 486,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 484,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "1273:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1273:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1256:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1288:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1256:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1248:42:2"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"name": "randDna",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "1301:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 494,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1335:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 493,
														"name": "_generateRandomDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1316:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) view returns (uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1301:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 497,
														"name": "randDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1352:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 498,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 499,
																"name": "randDna",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "1372:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1382:3:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1372:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1362:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1352:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1352:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 506,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1410:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 507,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1417:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 505,
														"name": "_createZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "1396:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1396:29:2"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "createRandomZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1216:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1216:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1215:14:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:0:2"
									},
									"scope": 512,
									"src": "1188:245:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 513,
							"src": "81:1355:2"
						}
					],
					"src": "0:1438:2"
				},
				"id": 2
			}
		}
	}
}